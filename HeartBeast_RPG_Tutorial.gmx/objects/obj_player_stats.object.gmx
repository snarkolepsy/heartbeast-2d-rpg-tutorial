<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the Player's Stats
hp = 5;
maxhp = hp;
stamina = 10;
maxstamina = stamina;
level = 1;
expr = 0;
maxexpr = 3;
attack = 1;
draw_set_colour(c_white);

// save and load system is like Zelda
// when save, exit, and load, will start player at the beginning of the room they are in

// get the player's xstart and ystart
if (instance_exists(obj_player)) {
    player_xstart = obj_player.x;
    player_ystart = obj_player.y;
}
else {
    player_xstart = 0;
    player_ystart = 0;
}

// keep track of the last room we were in
previous_room = room;

// create a variable that will keep track of the three cases: return, load, or start new room
room_start_action = NEW_ROOM;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stamina Regen Alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control the Stats
// health never reaches negative values
if (hp &lt;= 0) {
    hp = 0;
}

// stamina regen
if (stamina &lt; maxstamina and alarm[0]  == -1) {
    stamina++;
}

// pause the game
if (obj_input.pause_key) {
    if (room != rm_pause) { // if we are not in the pause room, go there
        if (instance_exists(obj_player)) { // do not bring the player into the pause toom
            obj_player.persistent = false;
        }
        // store the previous room and go to the pause room
        previous_room = room;
        room_persistent = true;
        room_goto(rm_pause);
    }
    else { // already in the pause room, return to previous room
        room_goto(previous_room);
    }
    
    // get out of the pause loop
    obj_input.pause_key = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Remeber the Player's Start Position

// exit for every room that is NOT an actual room (pause, menus, etc.)
if (room == rm_pause) {
    exit;
}

switch (room_start_action) {
    case RETURN:
        break;
        
    case NEW_ROOM:
    default:
        if (instance_exists(obj_player)) {
            player_xstart = obj_player.x;
            player_ystart = obj_player.y;
        }
        break;
        
    case LOAD:
        scr_load_game();
        break;
}

// reset the room start action
room_persistent = false;
room_start_action = NEW_ROOM;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Stats Representation With Respect to Room View

// health points
draw_text(32, 32, "HP: " + string(hp) + "/" + string(maxhp));

// stamina
draw_text(32, 64, "Stamina: " + string(stamina) + "/" + string(maxstamina));

// level
draw_text(32, 96, "Level: " + string(level));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
